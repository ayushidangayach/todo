{"version":3,"sources":["Components/Tasks/Tasks.js","Components/Status/Status.js","App.js","reportWebVitals.js","index.js"],"names":["Tasks","props","task","taskStatusHandler","index","deleteTaskHandler","taskChangeHandler","classname","status","className","type","onChange","checked","value","taskName","e","target","onClick","id","Status","activeStatus","name","filterHandler","App","state","tasks","newTask","setState","addTaskHandler","preventDefault","length","alert","taskInputHandler","taskIndex","taskId","filter","newTaskName","statusData","this","map","st","onSubmit","class","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.648c6f3f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Tasks = (props) => {\r\n  let {\r\n    task,\r\n    taskStatusHandler,\r\n    index,\r\n    deleteTaskHandler,\r\n    taskChangeHandler,\r\n  } = props;\r\n  let classname = task.status === \"Completed\" ? \"completed\" : \"\";\r\n\r\n  return (\r\n    <li className={classname}>\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"checkbox\"\r\n          type=\"checkbox\"\r\n          onChange={() => taskStatusHandler(index)}\r\n          checked={task.status === \"Completed\" ? \"checked\" : \"\"}\r\n        />{\" \"}\r\n        <label className=\"form-check-label\">\r\n          {task.status === \"Active\" ? (\r\n            <input\r\n              type=\"text\"\r\n              value={task.taskName}\r\n              className=\"form-control task-edit\"\r\n              onChange={(e) => taskChangeHandler(index, e.target.value)}\r\n            />\r\n          ) : (\r\n            task.taskName\r\n          )}\r\n        </label>\r\n      </div>\r\n      <button\r\n        className=\"remove btn btn-danger btn-sm float-right\"\r\n        onClick={() => deleteTaskHandler(task.id)}\r\n      >\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\n\r\nfunction Status(props) {\r\n  let classname = props.activeStatus === props.name ? \"active\" : \"\";\r\n\r\n  return (\r\n    <div className=\"col-md-2\">\r\n      <button\r\n        className={`btn-sm btn-default btn ${classname}`}\r\n        onClick={() => props.filterHandler(props.name)}\r\n      >\r\n        {props.name}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Status;\r\n","import \"./App.css\";\nimport Tasks from \"./Components/Tasks/Tasks\";\nimport React, { Component } from \"react\";\nimport Status from \"./Components/Status/Status\";\n\nclass App extends Component {\n  state = {\n    tasks: [],\n    status: [\"Total\", \"Active\", \"Completed\"],\n    newTask: \"\",\n    activeStatus: \"Total\",\n  };\n\n  filterHandler = (status) => {\n    this.setState({\n      activeStatus: status,\n    });\n  };\n\n  addTaskHandler = (e) => {\n    e.preventDefault();\n    if (this.state.newTask) {\n      let tasks;\n      tasks = [\n        ...this.state.tasks,\n        {\n          id: this.state.tasks.length,\n          taskName: this.state.newTask,\n          status: \"Active\",\n        },\n      ];\n      this.setState({ tasks });\n    } else {\n      alert(\"Please fill the task field first!\");\n    }\n    this.setState({\n      newTask: \"\",\n    });\n  };\n\n  taskInputHandler = (newTask) => {\n    this.setState({\n      newTask,\n    });\n  };\n\n  taskStatusHandler = (taskIndex) => {\n    let tasks;\n    tasks = [...this.state.tasks];\n    tasks[taskIndex].status =\n      tasks[taskIndex].status === \"Active\" ? \"Completed\" : \"Active\";\n    this.setState({ tasks });\n  };\n\n  deleteTaskHandler = (taskId) => {\n    let tasks;\n    tasks = [...this.state.tasks];\n    tasks = tasks.filter((e) => e.id !== taskId);\n    this.setState({ tasks });\n  };\n\n  taskChangeHandler = (taskIndex, newTaskName) => {\n    let tasks;\n    tasks = [...this.state.tasks];\n    tasks[taskIndex].taskName = newTaskName;\n    this.setState({ tasks });\n  };\n\n  render() {\n    let statusData = \"\";\n    statusData = this.state.status.map((st, index) => {\n      return (\n        <Status\n          name={st}\n          filterHandler={this.filterHandler}\n          key={index}\n          activeStatus={this.state.activeStatus}\n        />\n      );\n    });\n\n    let tasks = this.state.tasks;\n    if (this.state.activeStatus !== \"Total\") {\n      tasks = tasks.filter((task) => task.status === this.state.activeStatus);\n    }\n\n    tasks = tasks.map((task, index) => {\n      return (\n        <Tasks\n          task={task}\n          key={index}\n          taskStatusHandler={this.taskStatusHandler}\n          index={index}\n          deleteTaskHandler={this.deleteTaskHandler}\n          taskChangeHandler={this.taskChangeHandler}\n        />\n      );\n    });\n\n    return (\n      <div className=\"container\">\n        <div className=\"page-content page-container\" id=\"page-content\">\n          {/* <div className=\"row custom-alert\">\n            <div className=\"col-md-12\">\n              <p className=\"float-right\">Changes are being saved...</p>\n            </div>\n          </div> */}\n          <div className=\"padding\">\n            <div className=\"row container d-flex justify-content-center\">\n              <div className=\"col-md-2\">{this.state.tasks.length} Tasks</div>\n              <div className=\"col-md-4\"></div>\n              {statusData}\n              <div className=\"col-md-12\">\n                <div className=\"card px-3\">\n                  <div className=\"card-body\">\n                    <h4 className=\"card-title\">Awesome Todo list</h4>\n                    <div className=\"add-items d-flex\">\n                      <form\n                        onSubmit={this.addTaskHandler}\n                        className=\"col-md-12\"\n                      >\n                        <div class=\"form-row\">\n                          <div class=\"form-group col-md-8\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control todo-list-input\"\n                              placeholder=\"What do you need to do today?\"\n                              value={this.state.newTask}\n                              onChange={(e) =>\n                                this.taskInputHandler(e.target.value)\n                              }\n                            />\n                          </div>\n                          <div class=\"form-group col-md-4\">\n                            <button className=\"add btn btn-primary font-weight-bold todo-list-add-btn\">\n                              Add\n                            </button>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                    <div className=\"list-wrapper\">\n                      <ul className=\"d-flex flex-column-reverse todo-list\">\n                        {this.state.tasks.length ? (\n                          tasks\n                        ) : (\n                          <p className=\"text-center\">\n                            Is it a lazy day, or ya planning to do something?\n                          </p>\n                        )}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}